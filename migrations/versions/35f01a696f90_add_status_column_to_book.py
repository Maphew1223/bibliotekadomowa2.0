"""Add status column to book

Revision ID: 35f01a696f90
Revises: 48f7f0d8f6d6
Create Date: 2024-11-14 21:42:41.828736

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '35f01a696f90'
down_revision = '48f7f0d8f6d6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('book_author',
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['author.id'], ),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], ),
    sa.PrimaryKeyConstraint('book_id', 'author_id')
    )
    op.drop_table('book_authors')
    with op.batch_alter_table('book', schema=None) as batch_op:
        batch_op.add_column(sa.Column('status', sa.String(length=20), nullable=True))
        batch_op.drop_column('is_available')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('book', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_available', sa.BOOLEAN(), nullable=True))
        batch_op.drop_column('status')

    op.create_table('book_authors',
    sa.Column('book_id', sa.INTEGER(), nullable=False),
    sa.Column('author_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['author.id'], ),
    sa.ForeignKeyConstraint(['book_id'], ['book.id'], ),
    sa.PrimaryKeyConstraint('book_id', 'author_id')
    )
    op.drop_table('book_author')
    # ### end Alembic commands ###
